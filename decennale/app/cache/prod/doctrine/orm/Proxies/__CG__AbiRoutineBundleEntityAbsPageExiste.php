<?php

namespace Proxies\__CG__\Abi\RoutineBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AbsPageExiste extends \Abi\RoutineBundle\Entity\AbsPageExiste implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitId', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitRef', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitTitre', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitDescription', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitSlug', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitUrl', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitType', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitEtat');
        }

        return array('__isInitialized__', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitId', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitRef', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitTitre', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitDescription', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitSlug', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitUrl', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitType', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsPageExiste' . "\0" . 'pgexitEtat');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AbsPageExiste $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPgexitId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getPgexitId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPgexitId', array());

        return parent::getPgexitId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPgexitRef($pgexitRef)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPgexitRef', array($pgexitRef));

        return parent::setPgexitRef($pgexitRef);
    }

    /**
     * {@inheritDoc}
     */
    public function getPgexitRef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPgexitRef', array());

        return parent::getPgexitRef();
    }

    /**
     * {@inheritDoc}
     */
    public function setPgexitTitre($pgexitTitre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPgexitTitre', array($pgexitTitre));

        return parent::setPgexitTitre($pgexitTitre);
    }

    /**
     * {@inheritDoc}
     */
    public function getPgexitTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPgexitTitre', array());

        return parent::getPgexitTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setPgexitDescription($pgexitDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPgexitDescription', array($pgexitDescription));

        return parent::setPgexitDescription($pgexitDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getPgexitDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPgexitDescription', array());

        return parent::getPgexitDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPgexitSlug($pgexitSlug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPgexitSlug', array($pgexitSlug));

        return parent::setPgexitSlug($pgexitSlug);
    }

    /**
     * {@inheritDoc}
     */
    public function getPgexitSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPgexitSlug', array());

        return parent::getPgexitSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setPgexitUrl($pgexitUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPgexitUrl', array($pgexitUrl));

        return parent::setPgexitUrl($pgexitUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getPgexitUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPgexitUrl', array());

        return parent::getPgexitUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setPgexitType($pgexitType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPgexitType', array($pgexitType));

        return parent::setPgexitType($pgexitType);
    }

    /**
     * {@inheritDoc}
     */
    public function getPgexitType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPgexitType', array());

        return parent::getPgexitType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPgexitEtat($pgexitEtat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPgexitEtat', array($pgexitEtat));

        return parent::setPgexitEtat($pgexitEtat);
    }

    /**
     * {@inheritDoc}
     */
    public function getPgexitEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPgexitEtat', array());

        return parent::getPgexitEtat();
    }

}
