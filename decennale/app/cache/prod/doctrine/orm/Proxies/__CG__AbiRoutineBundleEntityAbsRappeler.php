<?php

namespace Proxies\__CG__\Abi\RoutineBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AbsRappeler extends \Abi\RoutineBundle\Entity\AbsRappeler implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapId', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapNom', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapPrenom', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapEmail', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapTel', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapDateappel', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapHeure', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapEtat', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapDate');
        }

        return array('__isInitialized__', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapId', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapNom', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapPrenom', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapEmail', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapTel', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapDateappel', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapHeure', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapEtat', '' . "\0" . 'Abi\\RoutineBundle\\Entity\\AbsRappeler' . "\0" . 'rapDate');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AbsRappeler $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRapId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getRapId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapId', array());

        return parent::getRapId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapNom($rapNom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapNom', array($rapNom));

        return parent::setRapNom($rapNom);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapNom', array());

        return parent::getRapNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapPrenom($rapPrenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapPrenom', array($rapPrenom));

        return parent::setRapPrenom($rapPrenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapPrenom', array());

        return parent::getRapPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapEmail($rapEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapEmail', array($rapEmail));

        return parent::setRapEmail($rapEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapEmail', array());

        return parent::getRapEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapTel($rapTel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapTel', array($rapTel));

        return parent::setRapTel($rapTel);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapTel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapTel', array());

        return parent::getRapTel();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapDateappel($rapDateappel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapDateappel', array($rapDateappel));

        return parent::setRapDateappel($rapDateappel);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapDateappel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapDateappel', array());

        return parent::getRapDateappel();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapHeure($rapHeure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapHeure', array($rapHeure));

        return parent::setRapHeure($rapHeure);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapHeure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapHeure', array());

        return parent::getRapHeure();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapEtat($rapEtat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapEtat', array($rapEtat));

        return parent::setRapEtat($rapEtat);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapEtat', array());

        return parent::getRapEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapDate($rapDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapDate', array($rapDate));

        return parent::setRapDate($rapDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapDate', array());

        return parent::getRapDate();
    }

}
